
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow public read/write for core app features if user is authenticated
    // Note: This is permissive. For production, you'd want more specific rules.
    match /users/{userId} {
      allow read, write: if request.auth != null;
      // You might want to restrict writes to the owner of the document:
      // allow write: if request.auth.uid == userId;
    }

    match /rooms/{roomId} {
      allow read, write: if request.auth != null;
    }
    
    match /chat_messages/{messageId} {
      allow read, write: if request.auth != null;
    }

    match /game_history/{historyId} {
        allow read, write: if request.auth != null;
    }
    
    match /user_bets/{betId} {
        allow read, write: if request.auth != null;
    }
    
    match /room_supporters/{supporterId} {
      allow read, write: if request.auth != null;
    }
    
    match /game_settings/{gameId} {
        allow read, write: if request.auth != null;
    }
    
    match /gifts/{giftId} {
      allow read: if true; // Gifts can be read by anyone
      allow write: if false; // Gifts should be managed from the console or an admin panel
    }
    
    match /games/{gameId} {
      allow read: if true; // Game metadata can be public
      allow write: if false; // Managed from admin panel
    }

    match /app_status/{statusId} {
        allow read: if true; // App status is public
        allow write: if false; // Managed from admin panel
    }
    
    // Rules for Voice Chat Signaling
    match /voiceRooms/{roomId}/{collection}/{docId} {
      allow read, write: if request.auth != null;
    }
  }
}
