rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // --- Users Collection ---
    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow anyone to create their own user document
      allow create: if isAuthenticated();

      // Allow authenticated users to read their own data
      allow get: if isAuthenticated();
      
      // Allow users to read any user's profile for display purposes
      allow list: if isAuthenticated();

      // Allow a user to update their own document, but with strict rules for balance
      allow update: if isAuthenticated() && request.auth.uid == userId &&
                       // Prevent fraudulent balance updates
                       (
                         // Case 1: Balance is being decreased (spending coins) - ALLOW
                         request.resource.data.balance < resource.data.balance ||
                         
                         // Case 2: Silver is being converted to balance - ALLOW
                         (
                           request.resource.data.balance > resource.data.balance &&
                           request.resource.data.silverBalance < resource.data.silverBalance
                         ) ||
                         
                         // Case 3: Profile info or other fields are changing, but not balance/silver - ALLOW
                         (
                            request.resource.data.balance == resource.data.balance &&
                            request.resource.data.silverBalance == resource.data.silverBalance
                         ) ||

                         // Case 4: Game winnings or rewards are being added (balance increases, silver doesn't) - ALLOW (Temporary)
                         (
                            request.resource.data.balance > resource.data.balance &&
                            request.resource.data.silverBalance == resource.data.silverBalance
                         )
                       );
    }

    // --- Rooms Collection ---
    // Rules for the 'rooms' collection
    match /rooms/{roomId} {
      // Anyone authenticated can read rooms
      allow get, list: if isAuthenticated();

      // Anyone authenticated can create a room
      allow create: if isAuthenticated();

      // Only the owner can delete a room (or an admin in the future)
      allow delete: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
      
      // Anyone authenticated can update room data (e.g., join/leave, change mic state)
      allow update: if isAuthenticated();
    }

    // --- Chat Messages Collection ---
    // Rules for the 'chat_messages' collection
    match /chat_messages/{messageId} {
      // Allow reading messages in a room
      allow get, list: if isAuthenticated();
      
      // Allow authenticated users to create messages
      allow create: if isAuthenticated() && request.resource.data.user.userId == request.auth.uid;
    }

    // --- Game History Collection ---
    // Rules for the 'game_history' collection
    match /game_history/{gameId} {
       // Anyone authenticated can read game history
      allow get, list: if isAuthenticated();

      // Allow any authenticated user to create game history (client-driven for now)
      allow create: if isAuthenticated();
    }
    
    // --- User Bets Collection ---
    // Rules for 'user_bets' collection
    match /user_bets/{betId} {
      // Users can only read and write their own bets
      allow get, create, update: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
    
    // --- Room Supporters Collection ---
    // Rules for 'room_supporters' collection
    match /room_supporters/{supporterId} {
       // Anyone can read supporter data
       allow get, list: if isAuthenticated();
       
       // A user can only update their own supporter data
       allow create, update: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }

  }
}
